services:
  glances:
    image: "nicolargo/glances:latest"
    container_name: "glances"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/timezone:/etc/timezone:ro
    pid: "host"
    ports:
      - "61208:61208"
      - "61209:61209"
    environment:
      GLANCES_OPT: -w
    security_opt:
      - "apparmor:unconfined"
    deploy:
      resources:
        limits:
          memory: "1g"
    networks:
      - phantomlink
    restart: unless-stopped
    labels:
      traefik.enable: true
      traefik.http.routers.glances.rule: Host(`glances.paynepride.com`)
      traefik.http.routers.glances.tls.certresolver: letsencrypt
      traefik.http.routers.glances.tls.domains[0].main: "paynepride.com"
      traefik.http.routers.glances.tls.domains[0].sans: "*.paynepride.com"
      traefik.http.services.glances.loadbalancer.server.port: "61208"
      traefik.http.routers.glances.middlewares: default-whitelist@file
  netdata:
    image: netdata/netdata
    container_name: netdata
    hostname: "netdata.paynepride.com"
    ports:
      - "19999:19999"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      PGID: "999"  # getent group docker | cut -d: -f3
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks:
      - phantomlink
    deploy:
      resources:
        limits:
          memory: "1g"
    labels:
      traefik.enable: true
      traefik.http.routers.netdata.rule: Host(`netdata.paynepride.com`)
      traefik.http.routers.netdata.tls.certresolver: letsencrypt
      traefik.http.routers.netdata.tls.domains[0].main: "paynepride.com"
      traefik.http.routers.netdata.tls.domains[0].sans: "*.paynepride.com"
      traefik.http.services.netdata.loadbalancer.server.port: "19999"
      traefik.http.routers.netdata.middlewares: default-whitelist@file

networks:
  phantomlink:
    external: true
